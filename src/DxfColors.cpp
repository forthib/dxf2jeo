#include "DxfColors.h"

#include <stdexcept>
#include <unordered_map>

namespace {
    std::uint32_t rgbToInt(std::uint8_t r, std::uint8_t g, std::uint8_t b)
    {
        auto rgb = std::uint32_t{0};
        rgb += r;
        rgb = rgb << 8;
        rgb += g;
        rgb = rgb << 8;
        rgb += b;
        return rgb;
    }

    std::uint32_t rgbToInt(const std::array<std::uint8_t, 3>& rgb) { return rgbToInt(rgb[0], rgb[1], rgb[2]); }
}

std::array<std::uint8_t, 3> dxfColorToRGB(std::uint8_t dxfColor)
{
    switch (dxfColor) {
    case 0: return {0, 0, 0};
    case 1: return {255, 0, 0};
    case 2: return {255, 255, 0};
    case 3: return {0, 255, 0};
    case 4: return {0, 255, 255};
    case 5: return {0, 0, 255};
    case 6: return {255, 0, 255};
    case 7: return {255, 255, 255};
    case 8: return {65, 65, 65};
    case 9: return {128, 128, 128};
    case 10: return {255, 0, 0};
    case 11: return {255, 170, 170};
    case 12: return {189, 0, 0};
    case 13: return {189, 126, 126};
    case 14: return {129, 0, 0};
    case 15: return {129, 86, 86};
    case 16: return {104, 0, 0};
    case 17: return {104, 69, 69};
    case 18: return {79, 0, 0};
    case 19: return {79, 53, 53};
    case 20: return {255, 63, 0};
    case 21: return {255, 191, 170};
    case 22: return {189, 46, 0};
    case 23: return {189, 141, 126};
    case 24: return {129, 31, 0};
    case 25: return {129, 96, 86};
    case 26: return {104, 25, 0};
    case 27: return {104, 78, 69};
    case 28: return {79, 19, 0};
    case 29: return {79, 59, 53};
    case 30: return {255, 127, 0};
    case 31: return {255, 212, 170};
    case 32: return {189, 94, 0};
    case 33: return {189, 157, 126};
    case 34: return {129, 64, 0};
    case 35: return {129, 107, 86};
    case 36: return {104, 52, 0};
    case 37: return {104, 86, 69};
    case 38: return {79, 39, 0};
    case 39: return {79, 66, 53};
    case 40: return {255, 191, 0};
    case 41: return {255, 234, 170};
    case 42: return {189, 141, 0};
    case 43: return {189, 173, 126};
    case 44: return {129, 96, 0};
    case 45: return {129, 118, 86};
    case 46: return {104, 78, 0};
    case 47: return {104, 95, 69};
    case 48: return {79, 59, 0};
    case 49: return {79, 73, 53};
    case 50: return {255, 255, 0};
    case 51: return {255, 255, 170};
    case 52: return {189, 189, 0};
    case 53: return {189, 189, 126};
    case 54: return {129, 129, 0};
    case 55: return {129, 129, 86};
    case 56: return {104, 104, 0};
    case 57: return {104, 104, 69};
    case 58: return {79, 79, 0};
    case 59: return {79, 79, 53};
    case 60: return {191, 255, 0};
    case 61: return {234, 255, 170};
    case 62: return {141, 189, 0};
    case 63: return {173, 189, 126};
    case 64: return {96, 129, 0};
    case 65: return {118, 129, 86};
    case 66: return {78, 104, 0};
    case 67: return {95, 104, 69};
    case 68: return {59, 79, 0};
    case 69: return {73, 79, 53};
    case 70: return {127, 255, 0};
    case 71: return {212, 255, 170};
    case 72: return {94, 189, 0};
    case 73: return {157, 189, 126};
    case 74: return {64, 129, 0};
    case 75: return {107, 129, 86};
    case 76: return {52, 104, 0};
    case 77: return {86, 104, 69};
    case 78: return {39, 79, 0};
    case 79: return {66, 79, 53};
    case 80: return {63, 255, 0};
    case 81: return {191, 255, 170};
    case 82: return {46, 189, 0};
    case 83: return {141, 189, 126};
    case 84: return {31, 129, 0};
    case 85: return {96, 129, 86};
    case 86: return {25, 104, 0};
    case 87: return {78, 104, 69};
    case 88: return {19, 79, 0};
    case 89: return {59, 79, 53};
    case 90: return {0, 255, 0};
    case 91: return {170, 255, 170};
    case 92: return {0, 189, 0};
    case 93: return {126, 189, 126};
    case 94: return {0, 129, 0};
    case 95: return {86, 129, 86};
    case 96: return {0, 104, 0};
    case 97: return {69, 104, 69};
    case 98: return {0, 79, 0};
    case 99: return {53, 79, 53};
    case 100: return {0, 255, 63};
    case 101: return {170, 255, 191};
    case 102: return {0, 189, 46};
    case 103: return {126, 189, 141};
    case 104: return {0, 129, 31};
    case 105: return {86, 129, 96};
    case 106: return {0, 104, 25};
    case 107: return {69, 104, 78};
    case 108: return {0, 79, 19};
    case 109: return {53, 79, 59};
    case 110: return {0, 255, 127};
    case 111: return {170, 255, 212};
    case 112: return {0, 189, 94};
    case 113: return {126, 189, 157};
    case 114: return {0, 129, 64};
    case 115: return {86, 129, 107};
    case 116: return {0, 104, 52};
    case 117: return {69, 104, 86};
    case 118: return {0, 79, 39};
    case 119: return {53, 79, 66};
    case 120: return {0, 255, 191};
    case 121: return {170, 255, 234};
    case 122: return {0, 189, 141};
    case 123: return {126, 189, 173};
    case 124: return {0, 129, 96};
    case 125: return {86, 129, 118};
    case 126: return {0, 104, 78};
    case 127: return {69, 104, 95};
    case 128: return {0, 79, 59};
    case 129: return {53, 79, 73};
    case 130: return {0, 255, 255};
    case 131: return {170, 255, 255};
    case 132: return {0, 189, 189};
    case 133: return {126, 189, 189};
    case 134: return {0, 129, 129};
    case 135: return {86, 129, 129};
    case 136: return {0, 104, 104};
    case 137: return {69, 104, 104};
    case 138: return {0, 79, 79};
    case 139: return {53, 79, 79};
    case 140: return {0, 191, 255};
    case 141: return {170, 234, 255};
    case 142: return {0, 141, 189};
    case 143: return {126, 173, 189};
    case 144: return {0, 96, 129};
    case 145: return {86, 118, 129};
    case 146: return {0, 78, 104};
    case 147: return {69, 95, 104};
    case 148: return {0, 59, 79};
    case 149: return {53, 73, 79};
    case 150: return {0, 127, 255};
    case 151: return {170, 212, 255};
    case 152: return {0, 94, 189};
    case 153: return {126, 157, 189};
    case 154: return {0, 64, 129};
    case 155: return {86, 107, 129};
    case 156: return {0, 52, 104};
    case 157: return {69, 86, 104};
    case 158: return {0, 39, 79};
    case 159: return {53, 66, 79};
    case 160: return {0, 63, 255};
    case 161: return {170, 191, 255};
    case 162: return {0, 46, 189};
    case 163: return {126, 141, 189};
    case 164: return {0, 31, 129};
    case 165: return {86, 96, 129};
    case 166: return {0, 25, 104};
    case 167: return {69, 78, 104};
    case 168: return {0, 19, 79};
    case 169: return {53, 59, 79};
    case 170: return {0, 0, 255};
    case 171: return {170, 170, 255};
    case 172: return {0, 0, 189};
    case 173: return {126, 126, 189};
    case 174: return {0, 0, 129};
    case 175: return {86, 86, 129};
    case 176: return {0, 0, 104};
    case 177: return {69, 69, 104};
    case 178: return {0, 0, 79};
    case 179: return {53, 53, 79};
    case 180: return {63, 0, 255};
    case 181: return {191, 170, 255};
    case 182: return {46, 0, 189};
    case 183: return {141, 126, 189};
    case 184: return {31, 0, 129};
    case 185: return {96, 86, 129};
    case 186: return {25, 0, 104};
    case 187: return {78, 69, 104};
    case 188: return {19, 0, 79};
    case 189: return {59, 53, 79};
    case 190: return {127, 0, 255};
    case 191: return {212, 170, 255};
    case 192: return {94, 0, 189};
    case 193: return {157, 126, 189};
    case 194: return {64, 0, 129};
    case 195: return {107, 86, 129};
    case 196: return {52, 0, 104};
    case 197: return {86, 69, 104};
    case 198: return {39, 0, 79};
    case 199: return {66, 53, 79};
    case 200: return {191, 0, 255};
    case 201: return {234, 170, 255};
    case 202: return {141, 0, 189};
    case 203: return {173, 126, 189};
    case 204: return {96, 0, 129};
    case 205: return {118, 86, 129};
    case 206: return {78, 0, 104};
    case 207: return {95, 69, 104};
    case 208: return {59, 0, 79};
    case 209: return {73, 53, 79};
    case 210: return {255, 0, 255};
    case 211: return {255, 170, 255};
    case 212: return {189, 0, 189};
    case 213: return {189, 126, 189};
    case 214: return {129, 0, 129};
    case 215: return {129, 86, 129};
    case 216: return {104, 0, 104};
    case 217: return {104, 69, 104};
    case 218: return {79, 0, 79};
    case 219: return {79, 53, 79};
    case 220: return {255, 0, 191};
    case 221: return {255, 170, 234};
    case 222: return {189, 0, 141};
    case 223: return {189, 126, 173};
    case 224: return {129, 0, 96};
    case 225: return {129, 86, 118};
    case 226: return {104, 0, 78};
    case 227: return {104, 69, 95};
    case 228: return {79, 0, 59};
    case 229: return {79, 53, 73};
    case 230: return {255, 0, 127};
    case 231: return {255, 170, 212};
    case 232: return {189, 0, 94};
    case 233: return {189, 126, 157};
    case 234: return {129, 0, 64};
    case 235: return {129, 86, 107};
    case 236: return {104, 0, 52};
    case 237: return {104, 69, 86};
    case 238: return {79, 0, 39};
    case 239: return {79, 53, 66};
    case 240: return {255, 0, 63};
    case 241: return {255, 170, 191};
    case 242: return {189, 0, 46};
    case 243: return {189, 126, 141};
    case 244: return {129, 0, 31};
    case 245: return {129, 86, 96};
    case 246: return {104, 0, 25};
    case 247: return {104, 69, 78};
    case 248: return {79, 0, 19};
    case 249: return {79, 53, 59};
    case 250: return {51, 51, 51};
    case 251: return {80, 80, 80};
    case 252: return {105, 105, 105};
    case 253: return {130, 130, 130};
    case 254: return {190, 190, 190};
    case 255: return {255, 255, 255};
    default: throw std::runtime_error{"unsupported dxf color"};
    }
}

std::optional<std::uint8_t> dxfColorFromRGB(const std::array<std::uint8_t, 3>& rgbColor)
{
    static const auto MAP = []() {
        auto map = std::unordered_map<std::uint32_t, std::uint8_t>{};
        for (uint64_t dxfColor = 0; dxfColor < 256; ++dxfColor)
            map[rgbToInt(dxfColorToRGB(static_cast<std::uint8_t>(dxfColor)))] = static_cast<std::uint8_t>(dxfColor);
        return map;
    }();

    const auto it = MAP.find(rgbToInt(rgbColor));
    if (it == MAP.end())
        return std::nullopt;
    return it->second;
}